


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ******************
    2 00000000         ;                »´æ÷±‰¡ø£¨¥”cpuport.c÷–µº»Î
    3 00000000         ;*******************************************************
                       ******************
    4 00000000         ;”√”⁄¥Ê¥¢…œ“ª∏ˆœﬂ≥Ãµƒspµƒ÷∏’Î
    5 00000000                 IMPORT           rt_interrupt_from_thread
    6 00000000         ;”√”⁄¥Ê¥¢œ¬“ª∏ˆΩ´“™‘À––µƒœﬂ≥Ãµƒsp÷∏’Î
    7 00000000                 IMPORT           rt_interrupt_to_thread
    8 00000000         ;PendSV÷–∂œ∑˛ŒÒ∫Ø ˝÷¥––µƒ±Í÷æ
    9 00000000                 IMPORT           rt_thread_switch_interrupt_flag
   10 00000000         
   11 00000000         
   12 00000000         ;*******************************************************
                       ******************
   13 00000000         ;                 ≥£¡ø£¨”–πÿƒ⁄∫ÀÕ‚…Ëºƒ¥Ê∆˜
   14 00000000         ;      œµÕ≥øÿ÷∆øÈÕ‚…ËSCBµÿ÷∑∑∂Œß0XE000ED00~0XE000ED3F
   15 00000000         ;*******************************************************
                       ******************
   16 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0XE000ED08  ;œÚ¡ø±Ì∆´“∆ºƒ¥Ê∆˜
   17 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0XE000ED04  ;÷–∂œøÿ÷∆◊¥Ã¨ºƒ¥Ê∆˜
                                                            
   18 00000000 E000ED20 
                       NVIC_SYSPRI2
                               EQU              0XE000ED20  ;œµÕ≥”≈œ»º∂ºƒ¥Ê∆˜
   19 00000000 00FF0000 
                       NVIC_PENDSV_PRI
                               EQU              0X00FF0000  ;PendSV ”≈œ»º∂÷µ£®l
                                                            owest£©
   20 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0X10000000  ;¥•∑¢PendSV excepti
                                                            onµƒ÷µ
   21 00000000         
   22 00000000         
   23 00000000         ;*******************************************************
                       ******************
   24 00000000         ;                  ¥˙¬Î≤˙…˙÷∏¡Ó
   25 00000000         ;*******************************************************
                       ******************
   26 00000000         
   27 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   28 00000000                 THUMB
   29 00000000                 REQUIRE8
   30 00000000                 PRESERVE8
   31 00000000         
   32 00000000         ;*******************************************************
                       ******************
   33 00000000         ;           ∫Ø ˝‘≠–Õ£∫void rt_hw_context_switch_to(rt_ui
                       nt32_t to)
   34 00000000         ;   r0 --> to
   35 00000000         ;   ∏√∫Ø ˝”√”⁄ø™∆Ùµ⁄“ª¥Œœﬂ≥Ã«–ªª
   36 00000000         ;*******************************************************
                       ******************



ARM Macro Assembler    Page 2 


   37 00000000         
   38 00000000         rt_hw_context_switch_to
                               PROC
   39 00000000         
   40 00000000         ;µº≥ˆrt_hw_context_switch_to£¨ π∆‰æﬂ”–»´æ÷ Ù–‘£¨ø…“‘‘⁄CŒ
                       ƒº˛÷–µ˜”√£¨µ´ «±ÿ–Î‘⁄rthw.hŒƒº˛÷–…˘√˜
   41 00000000                 EXPORT           rt_hw_context_switch_to
   42 00000000         
   43 00000000         ;Ω´rt_interrupt_to_threadµƒµÿ÷∑º”‘ÿµΩr1£¨◊¢“‚’‚±ﬂµƒµ»”⁄£
                       ¨LDR Rd£¨=Label£¨’‚¿ÔµƒLDR[Œ±÷∏¡Ó]£¨»Áπ˚label «∏ˆ±Í ∂∑˚£
                       ®±»»Á÷∏’Î£©£¨‘Úª·¥´»Î÷∏’Îµƒµÿ÷∑
   44 00000000         ;ƒ«√¥¥À ±rt_interrupt_to_thread÷∏œÚ’‚∏ˆsp£¨»ª∫Ûsp‘Ÿ÷∏œÚƒ
                       ⁄¥Ê÷–µƒ÷µ
   45 00000000 4922            LDR              r1, =rt_interrupt_to_thread
   46 00000002         ;Ω´r0µƒ÷µ¥Ê¥¢µΩrt_interrupt_to_thread£¨∆‰÷–r0¥Ê¥¢µƒ÷µ «œ
                       ¬“ª∏ˆ“™‘À––µƒœﬂ≥Ãµƒspµƒµÿ÷∑£¨
   47 00000002         ;”…∏√∫Ø ˝rt_hw_context_switch_to((rt_uint32_t)&to_thread
                       ->sp)µ˜”√ ±¥´»ÎµΩr0
   48 00000002 6008            STR              r0,[r1]
   49 00000004         
   50 00000004         ;…Ë÷√rt_interrupt_from_threadµƒ÷µŒ™0£¨±Ì æ∆Ù∂Øµ⁄“ª¥Œœﬂ≥Ã
                       «–ªª
   51 00000004         ;Ω´rt_interrupt_from_threadµƒµÿ÷∑º”‘ÿµΩr1
   52 00000004 4922            LDR              r1, =rt_interrupt_from_thread
   53 00000006         ;≈‰÷√r0µ»”⁄0
   54 00000006 F04F 0000       MOV              r0,#0x0
   55 0000000A         ;Ω´r0µƒ÷µ¥Ê¥¢µΩrt_interrupt_from_thread
   56 0000000A 6008            STR              r0,[r1]
   57 0000000C         
   58 0000000C         ;…Ë÷√÷–∂œ±Í÷æŒªrt_thread_switch_interrupt_flagµƒ÷µŒ™1
   59 0000000C         ;Ω´rt_thread_switch_interrupt_flagµƒµÿ÷∑º”‘ÿµΩr1
   60 0000000C 4921            LDR              r1, =rt_thread_switch_interrupt
_flag
   61 0000000E         ;≈‰÷√r0µ»”⁄1
   62 0000000E F04F 0001       MOV              r0, #1
   63 00000012         ;Ω´r0µƒ÷µ¥Ê¥¢µΩrt_thread_switch_interrupt_flag÷–
   64 00000012 6008            STR              r0,[r1]
   65 00000014         
   66 00000014         ;…Ë÷√ PendSV “Ï≥£µƒ”≈œ»º∂
   67 00000014 4820            LDR              r0, =NVIC_SYSPRI2 ;Ω´«∂Ã◊÷–∂œœÚ
                                                            ¡øøÿ÷∆∆˜µƒøÿ÷∆”≈œ»º
                                                            ∂µƒºƒ¥Ê∆˜µÿ÷∑º”‘ÿµΩ
                                                            r0
   68 00000016 F44F 017F       LDR              r1, =NVIC_PENDSV_PRI ;Ω´”≈œ»º∂µ
                                                            ƒ÷µº”‘ÿµΩr1
   69 0000001A F8D0 2000       LDR.W            r2, [r0,#0x00] ;∏√√¸¡Ó∂¡»°NVIC_
                                                            SYSPRI2µƒ÷µµΩr2£®.W
                                                             «LDRµƒ◊÷¿©’π£¨±£÷§
                                                            º”‘ÿµƒ «“ª∏ˆWord◊÷°
                                                            ££©
   70 0000001E EA41 0102       ORR              r1,r1,r2    ;∂‘r1∫Õr2Ω¯––°∞ªÚ°±
                                                            ‘À––À„£¨»ª∫ÛΩ´Ω·π˚∑
                                                            ≈µΩr1÷–
   71 00000022 6001            STR              r1, [r0]    ;Ω´r1µƒ÷µ£®–ﬁ∏ƒÕÍ±œ
                                                            µƒ”≈œ»º∂µƒ÷µ£©∏≥∏¯N
                                                            VIC_SYSPRI2
   72 00000024         
   73 00000024         ;¥•∑¢ PendSV “Ï≥££®≤˙…˙…œœ¬Œƒ«–ªª£©
   74 00000024 481D            LDR              r0, =NVIC_INT_CTRL



ARM Macro Assembler    Page 3 


   75 00000026 F04F 5180       LDR              r1, =NVIC_PENDSVSET ;’‚ «“ª∏ˆÃÿ
                                                             ‚µƒ÷µ£¨”√”⁄¥•∑¢ Pe
                                                            ndSV “Ï≥£
   76 0000002A 6001            STR              r1, [r0]
   77 0000002C         
   78 0000002C         ;ø™÷–∂œ°£CPSIEµƒ»´∆¥ «°∞Change Processor State, Interrup
                       t Enable°±£¨∫Û√Êµƒ≤Œ ˝F¥˙±ÌFIQ£®øÏÀŸ÷–∂œœÏ”¶£©£¨≤Œ ˝I¥˙±
                       ÌIRQ£®∆’Õ®÷–∂œœÏ”¶£©°£
   79 0000002C B661            CPSIE            F
   80 0000002E B662            CPSIE            I
   81 00000030         
   82 00000030         ;”¿‘∂Œﬁ∑®µΩ¥ÔµƒŒª÷√,”ÎPROC≥…∂‘≥ˆœ÷,End Procedure
   83 00000030                 ENDP
   84 00000030         
   85 00000030         
   86 00000030         ;/*
   87 00000030         ; *-----------------------------------------------------
                       ------------------
   88 00000030         ; * void rt_hw_context_switch(rt_uint32 from, rt_uint32 
                       to);
   89 00000030         ; * r0 --> from
   90 00000030         ; * r1 --> to
   91 00000030         ; *-----------------------------------------------------
                       ------------------
   92 00000030         ; */
   93 00000030         rt_hw_context_switch
                               PROC
   94 00000030                 EXPORT           rt_hw_context_switch
   95 00000030         
   96 00000030         ;…Ë÷√÷–∂œ±Í÷æŒªrt_thread_switch_interrupt_flagŒ™1
   97 00000030         ;º”‘ÿrt_thread_switch_interrupt_flagµƒµÿ÷∑µΩr2
   98 00000030 4A18            LDR              r2, =rt_thread_switch_interrupt
_flag
   99 00000032         ;º”‘ÿrt_thread_switch_interrupt_flagµƒ÷µµΩr2
  100 00000032 6813            LDR              r3, [r2]
  101 00000034         ;r3”Î1±»Ωœ£¨œ‡µ»‘Ú÷¥––BEQ√¸¡Ó
  102 00000034 2B01            CMP              r3, #1
  103 00000036 D004            BEQ              _reswitch
  104 00000038         ;…Ë÷√r3µƒ÷µŒ™1
  105 00000038 F04F 0301       MOV              r3, #1
  106 0000003C         ;Ω´rt_thread_switch_interrupt_flagµƒ÷µ÷√1
  107 0000003C 6013            STR              r3, [r2]
  108 0000003E         
  109 0000003E         ;…Ë÷√rt_interrupt_from_threadµƒ÷µ
  110 0000003E 4A14            LDR              r2, =rt_interrupt_from_thread ;
                                                             º”‘ÿrt_interrupt_f
                                                            rom_threadµƒµÿ÷∑µΩr
                                                            2
  111 00000040 6010            STR              r0, [r2]    ; ¥Ê¥¢r0µƒ÷µµΩrt_in
                                                            terrupt_from_thread
                                                            £¨º¥…œ“ª∏ˆœﬂ≥Ã’ª÷∏’
                                                            Îspµƒ÷∏’Î
  112 00000042         
  113 00000042         _reswitch
  114 00000042         ;…Ë÷√rt_interrupt_to_threadµƒ÷µ
  115 00000042 4A12            LDR              r2, =rt_interrupt_to_thread ; º
                                                            ”‘ÿrt_interrupt_fro
                                                            m_threadµƒµÿ÷∑µΩr2
  116 00000044 6011            STR              r1, [r2]    ; ¥Ê¥¢r1µƒ÷µµΩrt_in



ARM Macro Assembler    Page 4 


                                                            terrupt_from_thread
                                                            £¨º¥œ¬“ª∏ˆœﬂ≥Ã’ª÷∏’
                                                            Îspµƒ÷∏’Î
  117 00000046         
  118 00000046         ;¥•∑¢PendSV“Ï≥££¨ µœ÷…œœ¬Œƒ«–ªª
  119 00000046 4815            LDR              r0, =NVIC_INT_CTRL
  120 00000048 F04F 5180       LDR              r1, =NVIC_PENDSVSET
  121 0000004C 6001            STR              r1, [r0]
  122 0000004E         
  123 0000004E         ; ◊”≥Ã–Ú∑µªÿ
  124 0000004E 4770            BX               LR
  125 00000050         
  126 00000050         ; ◊”≥Ã–ÚΩ· ¯
  127 00000050                 ENDP
  128 00000050         
  129 00000050         
  130 00000050         ;/*
  131 00000050         ; *-----------------------------------------------------
                       ------------------
  132 00000050         ; * void PendSV_Handler(void);
  133 00000050         ; * r0 --> switch from thread stack
  134 00000050         ; * r1 --> switch to thread stack
  135 00000050         ; * psr, pc, lr, r12, r3, r2, r1, r0 are pushed into [fr
                       om] stack
  136 00000050         ; *-----------------------------------------------------
                       ------------------
  137 00000050         ; */
  138 00000050         
  139 00000050         PendSV_Handler
                               PROC
  140 00000050                 EXPORT           PendSV_Handler
  141 00000050         
  142 00000050         ;Ω˚”√÷–∂œ£¨Œ™¡À±£ª§…œœ¬Œƒ«–ªª≤ª±ª÷–∂œ
  143 00000050 F3EF 8210       MRS              r2, PRIMASK ;MRS:°∞Move to Regi
                                                            ster from Special r
                                                            egister°±°£Ω´PRIMAS
                                                            Kµƒ÷µ£®µ±«∞÷–∂œ◊¥Ã¨
                                                            £©“∆∂ØµΩr2ºƒ¥Ê∆˜÷–°
                                                            £
  144 00000054 B672            CPSID            I           ;πÿ±’IRQ÷–∂œ
  145 00000056         
  146 00000056         ;ªÒ»°÷–∂œ±Í÷æŒª£¨ø¥ø¥ «∑ÒŒ™0
  147 00000056         ;º”‘ÿrt_thread_switch_interrupt_flagµƒµÿ÷∑µΩr0
  148 00000056 480F            LDR              r0, =rt_thread_switch_interrupt
_flag
  149 00000058         ;º”‘ÿrt_thread_switch_interrupt_flagµƒ÷µµΩr1
  150 00000058 6801            LDR              r1, [r0]
  151 0000005A         ;≈–∂œr1µƒ÷µ «∑ÒŒ™0£¨Œ™0‘ÚÃ¯◊™µΩpendsv_exit
  152 0000005A B191            CBZ              r1, pendsv_exit ; CBZ:"Compare 
                                                            and Branch on Zero"
                                                            °£”Î0±»Ωœ£¨»Áπ˚ «0‘
                                                            ÚÃ¯◊™
  153 0000005C         
  154 0000005C         ;r1º¥rt_thread_switch_interrupt_flagµƒ±Í÷æŒª≤ªŒ™0
  155 0000005C F04F 0100       MOV              r1, #0x00
  156 00000060         ;Ω´rt_thread_switch_interrupt_flag«Â¡„
  157 00000060 6001            STR              r1,[r0]
  158 00000062         
  159 00000062         ;≈–∂œrt_interrupt_from_threadµƒ÷µ «∑ÒŒ™0



ARM Macro Assembler    Page 5 


  160 00000062         ;º”‘ÿrt_interrupt_from_threadµƒµÿ÷∑µΩr0
  161 00000062 480B            LDR              r0, =rt_interrupt_from_thread
  162 00000064         ;º”‘ÿrt_interrupt_from_threadµƒ÷µµΩr1
  163 00000064 6801            LDR              r1,[r0]
  164 00000066         ;≈–∂œr1µƒ÷µ «∑ÒŒ™0£¨»Áπ˚ «0æÕ¥˙±Ì√ª”–’‚ «µ⁄“ª¥Œœﬂ≥Ã«–ªª£
                       ¨≤¢√ª”–…œŒƒ–Ë“™±£¥Ê£¨÷±Ω”«–ªªµΩœ¬Œƒº¥ø…£¨Ã¯◊™µΩswitch_to
                       _thread
  165 00000066 B129            CBZ              r1, switch_to_thread
  166 00000068         
  167 00000068         ; ========================== …œŒƒ±£¥Ê ==================
                       ============
  168 00000068         ;µ±Ω¯»ÎPendSV_Handlerµƒ ±∫Ú£¨…œ“ª∏ˆœﬂ≥Ã÷–µƒª∑æ≥±‰¡ø√«
  169 00000068         ;xPSR,PC(œﬂ≥Ã»Îø⁄µÿ÷∑),r14,r12,r3,r2,r1,r0£®œﬂ≥Ãµƒ–Œ≤Œ£©
                       ∂ºª·◊‘∂Ø±£¥ÊµΩœﬂ≥Ãµƒ’ª÷–£¨ £œ¬µƒr4~r11–Ë“™ ÷∂Ø±£¥Ê
  170 00000068         ;ªÒ»°œﬂ≥Ãµƒ’ª÷∏’ÎµΩr1
  171 00000068 F3EF 8109       MRS              r1, psp     ;psp:°∞Process Stac
                                                            k Pointer°±¥Ê¥¢µ±«∞
                                                            œﬂ≥Ãµƒ’ª÷∏’Î
  172 0000006C         ;Ω´r4~r11±£¥ÊµΩr1÷∏œÚµƒµÿ÷∑£®√ø≤Ÿ◊˜“ª¥Œ£¨µÿ÷∑Ω´µ›ºı“ª¥Œ£
                       ©
  173 0000006C E921 0FF0       STMFD            r1!,{r4- r11} ;STMFD: "Store Mu
                                                            ltiple Full Descend
                                                            ing"√ø¥Œ¥Ê¥¢ÕÍ≥…∫Û£
                                                            ¨µÿ÷∑∂ºª·ºı…Ÿ32bit£
                                                            ®1∏ˆ◊÷£©
  174 00000070         ;º”‘ÿr0µƒµÿ÷∑÷∏œÚµƒ÷µµΩr0£¨º¥r0=rt_interrupt_from_thread
                       °£
  175 00000070 6800            LDR              r0, [r0]
  176 00000072         ;Ω´r1µƒ÷µ¥Ê¥¢µΩ[r0]£¨º¥∏¸–¬œﬂ≥Ã’ªsp£¨’‚¡Ωæ‰–Ë“™Ãÿ±¿ÌΩ‚“
                       ªœ¬
  177 00000072         ;Ω´r1µƒ÷µ¥Ê¥¢µΩ[r0]£¨º¥r1µƒ÷µ¥Ê¥¢µΩ[rt_interrupt_from_th
                       read]£¨Œ™÷Æ∫Ûµƒœﬂ≥Ã≤Ÿ◊˜ªÚ’ﬂª÷∏¥◊ˆ◊º±∏
  178 00000072 6001            STR              r1,[r0]
  179 00000074         
  180 00000074         ; ========================== œ¬Œƒ«–ªª ==================
                       ============
  181 00000074         switch_to_thread
  182 00000074         ;º”‘ÿrt_interrupt_to_threadµƒ÷µµΩr1
  183 00000074         ;rt_interrupt_to_thread «“ª∏ˆ»´æ÷±‰¡ø£¨¿Ô√Ê±£¥Êµƒ «œﬂ≥Ã’
                       ª÷∏’Îspµƒµÿ÷∑£¨œ¬√Êµƒ÷∏¡Ó «º”‘ÿµƒspµƒµÿ÷∑µƒµÿ÷∑
  184 00000074 4905            LDR              r1, =rt_interrupt_to_thread
  185 00000076         ;º”‘ÿrt_interrupt_to_threadµƒ÷µµΩr1£¨œ¬√Ê÷∏¡Ó «º”‘ÿµƒspµ
                       ƒµÿ÷∑
  186 00000076 6809            LDR              r1, [r1]
  187 00000078         ;œ¬√Ê÷∏¡Ó «º”‘ÿµƒsp
  188 00000078 6809            LDR              r1, [r1]
  189 0000007A         
  190 0000007A         ;Ω´œﬂ≥Ã’ª÷∏’Îr1£®≤Ÿ◊˜«∞œ»µ›ºı£©÷∏œÚµƒƒ⁄»›º”‘ÿµΩcpuºƒ¥Ê∆˜
                       r4~r11
  191 0000007A E8B1 0FF0       LDMFD            r1!,{r4- r11}
  192 0000007E         ;Ω´œﬂ≥Ã’ª÷∏’Î∏¸–¬µΩpsp
  193 0000007E F381 8809       MSR              psp, r1
  194 00000082         
  195 00000082         pendsv_exit
  196 00000082         ;ª÷∏¥÷–∂œ
  197 00000082 F382 8810       msr              PRIMASK, r2
  198 00000086         
  199 00000086         ;»∑±£“Ï≥£∑µªÿ π”√µƒ’ª÷∏’Î «psp£¨º¥lrºƒ¥Ê∆˜µƒŒª2“™Œ™1
  200 00000086         ;Õ®π˝Ω´lrºƒ¥Ê∆˜µƒµ⁄2Œª…Ë÷√Œ™1£®º¥ÃÌº”0x04£©£¨÷∏¡Ó»∑±£‘⁄¥



ARM Macro Assembler    Page 6 


                       ”“Ï≥£∑µªÿ ±£¨¥¶¿Ì∆˜ π”√Ω¯≥Ã’ª÷∏’Î£®psp£©∂¯≤ª «÷˜’ª÷∏’Î£®
                       msp£©°£
  201 00000086         ;ARM¥¶¿Ì∆˜”–¡Ω÷÷’ª÷∏’Î£¨psp£®Ω¯≥Ã’ª÷∏’Î£©∫Õmsp£®÷˜’ª÷∏’Î
                       £©£¨À¸√«∑÷±”√”⁄≤ªÕ¨µƒƒøµƒ°£
  202 00000086         ;pspÕ®≥£”√”⁄∆’Õ®µƒ”¶”√≥Ã–Úœﬂ≥Ã£¨∂¯msp”√”⁄“Ï≥£¥¶¿Ì∫ÕœµÕ≥º
                       ∂±µƒπ¶ƒ‹°£
  203 00000086         ;lr£®¡¥Ω”ºƒ¥Ê∆˜£©Õ®≥£”√”⁄¥Ê¥¢∫Ø ˝∑µªÿµÿ÷∑°£µ´‘⁄÷–∂œªÚ“Ï≥
                       £¥¶¿Ì ±£¨lrµƒ”√Õæª·¬‘”–≤ªÕ¨°£
  204 00000086         ;µ±∑¢…˙“Ï≥£ ±£¨lrª·¥Ê¥¢“ª–©∂ÓÕ‚µƒ–≈œ¢£¨∞Ô÷˙¥¶¿Ì∆˜æˆ∂®»Á∫
                       Œ¥”“Ï≥£∑µªÿ°£
  205 00000086 F04E 0E04       ORR              lr, lr, #0x04
  206 0000008A         ;“Ï≥£∑µªÿ£¨’‚∏ˆ ±∫Ú’ª÷–µƒ £œ¬ƒ⁄»›£®xPSR£¨PC, r14£¨r12£¨r
                       3£¨r2£¨r1£¨r0£©ª·◊‘∂Øº”‘ÿµΩCPUºƒ¥Ê∆˜
  207 0000008A         ;Õ¨ ±£¨pspµƒ÷µ“≤ª·∏¸–¬£¨÷∏œÚœﬂ≥Ã’ªµƒ’ª∂•
  208 0000008A 4770            BX               lr
  209 0000008C         
  210 0000008C         ;◊”≥Ã–ÚPendsv_HandlerΩ· ¯
  211 0000008C                 ENDP
  212 0000008C         
  213 0000008C         
  214 0000008C         
  215 0000008C         
  216 0000008C         
  217 0000008C                 ALIGN            4
  218 0000008C         
  219 0000008C                 END
              00000000 
              00000000 
              00000000 
              E000ED20 
              E000ED04 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=..\..\output\context_rvds.d -o..\..\output\context_rvds.o -I.\RTE\
_TFTLCD -ID:\Users\HawkJ\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.4.1\Devic
e\Include -ID:\Keil_v5\ARM\CMSIS\Include --predefine="__UVISION_VERSION SETA 52
8" --predefine="STM32F10X_HD SETA 1" --list=..\..\output\context_rvds.lst ..\..
\Rt-Thread\Src\context_rvds.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 27 in file ..\..\Rt-Thread\Src\context_rvds.s
   Uses
      None
Comment: .text unused
PendSV_Handler 00000050

Symbol: PendSV_Handler
   Definitions
      At line 139 in file ..\..\Rt-Thread\Src\context_rvds.s
   Uses
      At line 140 in file ..\..\Rt-Thread\Src\context_rvds.s
Comment: PendSV_Handler used once
_reswitch 00000042

Symbol: _reswitch
   Definitions
      At line 113 in file ..\..\Rt-Thread\Src\context_rvds.s
   Uses
      At line 103 in file ..\..\Rt-Thread\Src\context_rvds.s
Comment: _reswitch used once
pendsv_exit 00000082

Symbol: pendsv_exit
   Definitions
      At line 195 in file ..\..\Rt-Thread\Src\context_rvds.s
   Uses
      At line 152 in file ..\..\Rt-Thread\Src\context_rvds.s
Comment: pendsv_exit used once
rt_hw_context_switch 00000030

Symbol: rt_hw_context_switch
   Definitions
      At line 93 in file ..\..\Rt-Thread\Src\context_rvds.s
   Uses
      At line 94 in file ..\..\Rt-Thread\Src\context_rvds.s
Comment: rt_hw_context_switch used once
rt_hw_context_switch_to 00000000

Symbol: rt_hw_context_switch_to
   Definitions
      At line 38 in file ..\..\Rt-Thread\Src\context_rvds.s
   Uses
      At line 41 in file ..\..\Rt-Thread\Src\context_rvds.s
Comment: rt_hw_context_switch_to used once
switch_to_thread 00000074

Symbol: switch_to_thread
   Definitions
      At line 181 in file ..\..\Rt-Thread\Src\context_rvds.s
   Uses
      At line 165 in file ..\..\Rt-Thread\Src\context_rvds.s
Comment: switch_to_thread used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 17 in file ..\..\Rt-Thread\Src\context_rvds.s
   Uses
      At line 74 in file ..\..\Rt-Thread\Src\context_rvds.s
      At line 119 in file ..\..\Rt-Thread\Src\context_rvds.s

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 20 in file ..\..\Rt-Thread\Src\context_rvds.s
   Uses
      At line 75 in file ..\..\Rt-Thread\Src\context_rvds.s
      At line 120 in file ..\..\Rt-Thread\Src\context_rvds.s

NVIC_PENDSV_PRI 00FF0000

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 19 in file ..\..\Rt-Thread\Src\context_rvds.s
   Uses
      At line 68 in file ..\..\Rt-Thread\Src\context_rvds.s
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI2 E000ED20

Symbol: NVIC_SYSPRI2
   Definitions
      At line 18 in file ..\..\Rt-Thread\Src\context_rvds.s
   Uses
      At line 67 in file ..\..\Rt-Thread\Src\context_rvds.s
Comment: NVIC_SYSPRI2 used once
SCB_VTOR E000ED08

Symbol: SCB_VTOR
   Definitions
      At line 16 in file ..\..\Rt-Thread\Src\context_rvds.s
   Uses
      None
Comment: SCB_VTOR unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

rt_interrupt_from_thread 00000000

Symbol: rt_interrupt_from_thread
   Definitions
      At line 5 in file ..\..\Rt-Thread\Src\context_rvds.s
   Uses
      At line 52 in file ..\..\Rt-Thread\Src\context_rvds.s
      At line 110 in file ..\..\Rt-Thread\Src\context_rvds.s
      At line 161 in file ..\..\Rt-Thread\Src\context_rvds.s

rt_interrupt_to_thread 00000000

Symbol: rt_interrupt_to_thread
   Definitions
      At line 7 in file ..\..\Rt-Thread\Src\context_rvds.s
   Uses
      At line 45 in file ..\..\Rt-Thread\Src\context_rvds.s
      At line 115 in file ..\..\Rt-Thread\Src\context_rvds.s
      At line 184 in file ..\..\Rt-Thread\Src\context_rvds.s

rt_thread_switch_interrupt_flag 00000000

Symbol: rt_thread_switch_interrupt_flag
   Definitions
      At line 9 in file ..\..\Rt-Thread\Src\context_rvds.s
   Uses
      At line 60 in file ..\..\Rt-Thread\Src\context_rvds.s
      At line 98 in file ..\..\Rt-Thread\Src\context_rvds.s
      At line 148 in file ..\..\Rt-Thread\Src\context_rvds.s

3 symbols
349 symbols in table
